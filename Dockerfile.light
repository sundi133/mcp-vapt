FROM ubuntu:22.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV GO_VERSION=1.21.5

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    git \
    curl \
    wget \
    unzip \
    build-essential \
    ca-certificates \
    sqlmap \
    libpcap-dev \
    libssl-dev \
    pkg-config \
    && rm -rf /var/lib/apt/lists/*

# Install Go
RUN wget -q https://golang.org/dl/go${GO_VERSION}.linux-amd64.tar.gz \
    && tar -C /usr/local -xzf go${GO_VERSION}.linux-amd64.tar.gz \
    && rm go${GO_VERSION}.linux-amd64.tar.gz

# Set Go environment
ENV PATH="/usr/local/go/bin:${PATH}"
ENV GOPATH="/go"
ENV PATH="${GOPATH}/bin:${PATH}"

# Create app directory
WORKDIR /app

# Copy requirements first for better Docker layer caching
COPY requirements.txt .

# Install Python dependencies
RUN pip3 install --no-cache-dir -r requirements.txt

# Install essential Go-based security tools
RUN go install -v github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest
RUN go install -v github.com/projectdiscovery/httpx/cmd/httpx@latest  
RUN go install -v github.com/projectdiscovery/katana/cmd/katana@latest
RUN go install -v github.com/projectdiscovery/dnsx/cmd/dnsx@latest
RUN go install -v github.com/ffuf/ffuf/v2@latest
RUN go install -v github.com/OJ/gobuster/v3@latest

# Install nuclei with fallback
RUN go install -v github.com/projectdiscovery/nuclei/v3/cmd/nuclei@latest || \
    (curl -L https://github.com/projectdiscovery/nuclei/releases/latest/download/nuclei_3.4.7_linux_amd64.zip -o nuclei.zip && \
     unzip nuclei.zip && mv nuclei /go/bin/ && rm nuclei.zip)

# Install TruffleHog
RUN curl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | sh -s -- -b /usr/local/bin

# Install Commix
RUN git clone https://github.com/commixproject/commix.git /opt/commix && \
    chmod +x /opt/commix/commix.py && \
    ln -sf /opt/commix/commix.py /usr/local/bin/commix

# Update Nuclei templates
RUN which nuclei && nuclei -update-templates -silent || echo "Nuclei templates update skipped"

# Copy application files
COPY . .

# Create necessary directories
RUN mkdir -p /tmp/scan_results /tmp/wordlists /app/logs

# Create startup script for container
RUN echo '#!/bin/bash\n\
echo "ðŸš€ Starting ExternalAttacker-MCP on Fly.io..."\n\
port=${PORT:-6991}\n\
echo "Starting Flask app on port $port..."\n\
python3 ExternalAttacker-App.py &\n\
FLASK_PID=$!\n\
echo "Flask PID: $FLASK_PID"\n\
sleep 3\n\
echo "Starting MCP server..."\n\
python3 ExternalAttacker-MCP.py\n\
' > /app/start-container.sh && chmod +x /app/start-container.sh

# Expose port
EXPOSE 6991

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:${PORT:-6991}/ || exit 1

# Start the application
CMD ["/app/start-container.sh"] 